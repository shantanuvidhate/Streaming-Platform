// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model Schema
model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favouriteIds String[] @db.ObjectId
  sessions Sessions[]
  accounts Account[]
}

// Account Model Schema
model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  // Mapping
  user User @relation(fields: [userId] , references: [id] , onDelete: Cascade) //CASCADE in SQL is used to simultaneously delete or update an entry from both the child and parent table

  @@unique([provider,providerAccountId])
}

// Session Model Schema
model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expires DateTime

  // Mapping
  user User @relation(fields: [userId], references: [id], onDelete:Cascade) //CASCADE in SQL is used to simultaneously delete or update an entry from both the child and parent table
}